name: "Build"

# on: 
#   push:
#     branches: 
#       - main
#     paths-ignore:
#       - '**/*.md'
#       - '**/*.gitignore'
#       - '**/*.gitattributes'
  
#   workflow_dispatch:
#     branches:
#       - main
#     paths-ignore:
#       - '**/*.md'
#       - '**/*.gitignore'
#       - '**/*.gitattributes'

on: 
  push:
  schedule:
    - cron: '0/5 * * * *'  # every day at midnight

jobs:
  increase-browser-version:
    runs-on: linux-vm
    steps:
      - name: checkout master
        uses: actions/checkout@v3
        with:
          ref: 'master'
          
      - name: pull new source
        run: git pull

      - name: update version
        shell: bash
        id: update_version
        run: |
          file_path="package.json"
          version=$(jq -r '.version' $file_path)

          IFS='.' read -ra version_parts <<< "$version"
          last_part=${version_parts[3]}

          new_last_part=$((last_part+1))

          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}.$new_last_part"
          jq --arg new_version "$new_version" '.version = $new_version' $file_path > tmp.json && mv tmp.json $file_path

          echo "::set-output name=new_version::$new_version"
      
      - name: ${{steps.update_version.outputs.new_version}}
        run: echo ${{steps.update_version.outputs.new_version}}
      # - name: commit change
      #   uses: devops-infra/action-commit-push@master
      #   with:
      #     github_token: "${{ secrets.GITHUB_TOKEN }}"
      #     add_timestamp: true
      #     commit_prefix: "[AUTO]"
      #     commit_message: ${{ env.version }}
      #     force: false
      #     target_branch: master

  increase-core-version:
    runs-on: linux-vm
    steps:
      - name: checkout master
        uses: actions/checkout@v3
        with:
          repository: 'https://github.com/nguyenphl/brave-core'
          ref: 'master'
      - name: pull new source
        run: git pull

      - name: update version
        shell: bash
        run: |
          file_path="package.json"
          version=$(jq -r '.version' $file_path)

          IFS='.' read -ra version_parts <<< "$version"
          last_part=${version_parts[3]}

          new_last_part=$((last_part+1))

          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}.$new_last_part"
          echo new_version > output.log
          jq --arg new_version "$new_version" '.version = $new_version' $file_path > tmp.json && mv tmp.json $file_path

      - name: Upload version file
        uses: actions/upload-artifact@v3
        with:
          name: output-log-file
          path: output.log
      # - name: commit change
      #   uses: devops-infra/action-commit-push@master
      #   with:
      #     github_token: "${{ secrets.GITHUB_TOKEN }}"
      #     add_timestamp: true
      #     commit_prefix: "[AUTO]"
      #     commit_message: ${{ env.version }}
      #     force: false
      #     target_branch: master
      
  # build:
  #   strategy:
  #     # os: []
  #     # arch: []
  #     matrix:
  #       include:
  #         # - os: windows-vm
  #         #   arch: ia32
  #         # - os: windows-vm
  #         #   arch: x64
  #         - os: linux-vm
  #           arch: amd64
  #         # - os: linux-vm
  #         #   arch: arm64
  #         # - os: android-vm
  #         #   arch: arm
        
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: checkout master
  #       uses: actions/checkout@v3
  #       with:
  #         ref: 'master'

  #     - name: pull new source
  #       run: git pull

  #     - name: install deps
  #       run: npm i

  #     - name: init
  #       run: npm run init --target_arch=${{ matrix.arch }}

  #     - name: build
  #       run: npm run build Release --target_arch=${{ matrix.arch }}

  # test:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:

  # create_dist:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
